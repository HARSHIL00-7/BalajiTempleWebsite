{"ast":null,"code":"var _jsxFileName = \"/Users/anju/Desktop/balajitemplewebsite/src/components/loginscreen.js\",\n  _s = $RefreshSig$();\nimport './loginscreen.css';\nimport React, { useState, useRef, useEffect } from 'react';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = _ref => {\n  _s();\n  let {\n    setLoggedIn\n  } = _ref;\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const recaptchaRef = useRef(null);\n  useEffect(() => {\n    const handleWindowBack = () => {\n      navigate('/'); // Redirect to the login screen\n    };\n\n    window.addEventListener('popstate', handleWindowBack);\n    return () => {\n      window.removeEventListener('popstate', handleWindowBack);\n    };\n  }, []);\n  const navigate = useNavigate();\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Perform username and password validation\n    const isValid = validateCredentials(username, password); // Replace with your validation logic\n    const isCaptchaSolved = recaptchaRef.current && recaptchaRef.current.getValue() !== ''; // Check if the captcha is solved\n    if (username === '') {\n      alert('Please enter a username.');\n      return;\n    }\n    if (username != 'admin') {\n      alert('Please enter a valid username.');\n      return;\n    }\n    if (password != 'password') {\n      alert('Password and username dosen\\'t match.');\n      return;\n    }\n    if (password === '') {\n      alert('Please enter a password.');\n      return;\n    }\n    if (!isCaptchaSolved) {\n      alert('Please solve the reCAPTCHA.');\n      return;\n    }\n    if (isValid && isCaptchaSolved) {\n      setLoggedIn(true);\n      navigate('/landing');\n    } else {\n      setLoggedIn(false);\n    }\n  };\n  const validateCredentials = (username, password) => {\n    // Replace with your own validation logic\n    // For demonstration purposes, username is 'admin' and password is 'password'\n    return username === 'admin' && password === 'password';\n  };\n  const onChange = value => {\n    // Handle reCAPTCHA change event\n  };\n  const resetCaptcha = () => {\n    recaptchaRef.current.reset(); // Reset the reCAPTCHA\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container1\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"LoginTemple.jpg\",\n          alt: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"login-heading\",\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Username\",\n              value: username,\n              onChange: e => setUsername(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Password\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(ReCAPTCHA, {\n              sitekey: \"6LetTlcmAAAAALLWeJMO2vkS11lXJk6hq8OzI8J7\",\n              onChange: onChange,\n              ref: recaptchaRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"remember-me-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: \"remember-me\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"remember-me\",\n              children: \"Remember me!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: resetCaptcha,\n              children: \"Reset reCAPTCHA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              children: \"Clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"BWeuy05rEvkUhfQ6qLacEBenxrw=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useRef","useEffect","ReCAPTCHA","useNavigate","jsxDEV","_jsxDEV","Login","_ref","_s","setLoggedIn","username","setUsername","password","setPassword","recaptchaRef","handleWindowBack","navigate","window","addEventListener","removeEventListener","handleSubmit","e","preventDefault","isValid","validateCredentials","isCaptchaSolved","current","getValue","alert","onChange","value","resetCaptcha","reset","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onSubmit","type","placeholder","target","sitekey","ref","id","htmlFor","onClick","_c","$RefreshReg$"],"sources":["/Users/anju/Desktop/balajitemplewebsite/src/components/loginscreen.js"],"sourcesContent":["\nimport './loginscreen.css';\nimport React, { useState, useRef,useEffect } from 'react';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport { useNavigate } from 'react-router-dom';\nconst Login = ({ setLoggedIn }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const recaptchaRef = useRef(null);\n  useEffect(() => {\n    const handleWindowBack = () => {\n      navigate('/'); // Redirect to the login screen\n    };\n\n    window.addEventListener('popstate', handleWindowBack);\n\n    return () => {\n      window.removeEventListener('popstate', handleWindowBack);\n    };\n  }, []);\n\n  \n  const navigate = useNavigate();\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Perform username and password validation\n    const isValid = validateCredentials(username, password); // Replace with your validation logic\n    const isCaptchaSolved = recaptchaRef.current && recaptchaRef.current.getValue() !== ''; // Check if the captcha is solved\n    if (username === '' ) {\n      alert('Please enter a username.');\n      return;\n    }\n    if (username !='admin') {\n      alert('Please enter a valid username.');\n      return;\n    }\n    \n    if ( password != 'password') {\n      alert('Password and username dosen\\'t match.');\n      return;\n    }\n    if (password === '') {\n      alert('Please enter a password.');\n      return;\n    }\n  \n    if (!isCaptchaSolved) {\n      alert('Please solve the reCAPTCHA.');\n      return;\n    }\n    if (isValid && isCaptchaSolved) {\n      setLoggedIn(true);\n      navigate('/landing');\n    } else {\n      setLoggedIn(false);\n    }\n  };\n\n  const validateCredentials = (username, password) => {\n    // Replace with your own validation logic\n    // For demonstration purposes, username is 'admin' and password is 'password'\n    return username === 'admin' && password === 'password';\n  };\n  const onChange = (value) => {\n    // Handle reCAPTCHA change event\n  };\n  const resetCaptcha = () => {\n    recaptchaRef.current.reset(); // Reset the reCAPTCHA\n  };\n\n  return (\n    <div className=\"container1\">\n     <div className=\"background-image\"></div>\n      <div className=\"login-box\">\n        <div className=\"image-container\">\n          <img src=\"LoginTemple.jpg\" alt=\"Login\" />\n        </div>\n        <div className=\"details-container\">\n          <h2 className=\"login-heading\">Log In</h2>\n          <form onSubmit={handleSubmit}>\n            <div className=\"input-container\">\n              <input\n                type=\"text\"\n                placeholder=\"Username\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n              />\n            </div>\n            <div className=\"input-container\">\n              <input\n                type=\"password\"\n                placeholder=\"Password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </div>\n            <div>\n              <ReCAPTCHA\n                sitekey=\"6LetTlcmAAAAALLWeJMO2vkS11lXJk6hq8OzI8J7\"\n                onChange={onChange}\n                ref={recaptchaRef}\n              />\n            </div>\n            <div className=\"remember-me-container\">\n              <input type=\"checkbox\" id=\"remember-me\" />\n              <label htmlFor=\"remember-me\">Remember me!</label>\n              <button type=\"button\" onClick={resetCaptcha}>\n                Reset reCAPTCHA\n              </button>\n            </div>\n            <div className=\"buttons-container\">\n              <button type=\"submit\">Submit</button>\n              <button type=\"button\">Clear</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}